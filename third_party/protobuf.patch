diff --git a/BUILD b/BUILD
index e9e108377..8ea4ed387 100644
--- a/BUILD
+++ b/BUILD
@@ -191,6 +191,7 @@ cc_library(
     copts = COPTS,
     includes = ["src/"],
     linkopts = LINK_OPTS,
+    alwayslink = 1,
     visibility = ["//visibility:public"],
     deps = [":protobuf_lite"] + PROTOBUF_DEPS,
 )
@@ -201,7 +202,7 @@ cc_library(
 # TODO(keveman): Remove this target once the support gets added to Bazel.
 cc_library(
     name = "protobuf_headers",
-    hdrs = glob(["src/**/*.h"]),
+    hdrs = glob(["src/**/*.h", "src/**/*.inc"]),
     includes = ["src/"],
     visibility = ["//visibility:public"],
 )
diff --git a/protobuf.bzl b/protobuf.bzl
index e764859b4..8c89e55f6 100644
--- a/protobuf.bzl
+++ b/protobuf.bzl
@@ -109,7 +109,11 @@ def _proto_gen_impl(ctx):
         use_grpc_plugin = (ctx.attr.plugin_language == "grpc" and ctx.attr.plugin)
         path_tpl = "$(realpath %s)" if in_gen_dir else "%s"
         if ctx.attr.gen_cc:
-            args += [("--cpp_out=" + path_tpl) % gen_dir]
+            if ctx.attr.cc_options:
+                cc_option = ",".join(ctx.attr.cc_options) + ":" + path_tpl
+            else:
+                cc_option = path_tpl
+            args += [("--cpp_out=" + cc_option) % gen_dir]
             outs.extend(_CcOuts([src.basename], use_grpc_plugin = use_grpc_plugin))
         if ctx.attr.gen_py:
             args += [("--python_out=" + path_tpl) % gen_dir]
@@ -193,6 +197,7 @@ proto_gen = rule(
         "plugin_options": attr.string_list(),
         "gen_cc": attr.bool(),
         "gen_py": attr.bool(),
+        "cc_options": attr.string_list(),
         "outs": attr.output_list(),
     },
     output_to_genfiles = True,
