syntax = "proto3";

package felicia;

import "felicia/core/master/master.proto";

service MasterService {
  // Register client with a given RegisterClientRequest.
  rpc RegisterClient(RegisterClientRequest) returns (RegisterClientResponse) {}

  // List clients whose properties are correspondent to the ListClientsRequest.
  rpc ListClients(ListClientsRequest) returns (ListClientsResponse) {}

  // Register node with a given RegisterNodeRequest.
  rpc RegisterNode(RegisterNodeRequest) returns (RegisterNodeResponse) {}

  // Unregister node with a given RegisterNodeRequest.
  rpc UnregisterNode(UnregisterNodeRequest) returns (UnregisterNodeResponse) {}

  // List nodes whose properties are correspondent to the ListNodesRequest.
  rpc ListNodes(ListNodesRequest) returns (ListNodesResponse) {}

  // Publish topic. Failed when there have already a same topic.
  rpc PublishTopic(PublishTopicRequest) returns (PublishTopicResponse) {}

  // Unpublish topic. Failed when there's no right to unpublish the requsted topic.
  rpc UnpublishTopic(UnpublishTopicRequest) returns (UnpublishTopicResponse) {}

  // Subscribe topic.
  rpc SubscribeTopic(SubscribeTopicRequest) returns (SubscribeTopicResponse) {}

  // Unsubscribe topic. Failed when there's no right to unscribe the requsted topic.
  rpc UnsubscribeTopic(UnsubscribeTopicRequest) returns (UnsubscribeTopicResponse) {}

  // List topics whose properties are correspondent to the ListTopicsRequest.
  rpc ListTopics(ListTopicsRequest) returns (ListTopicsResponse) {}
}